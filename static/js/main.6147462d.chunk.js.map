{"version":3,"sources":["types/types.js","redux/reducer.js","styles/GlobalStyles.js","styles/MediaQueries.js","components/FilterSelect/FilterSelectStyles.js","components/FilterSelect/FilterSelect.js","components/SearchBar/SearchBarStyles.js","components/SearchBar/SearchBar.js","components/Wrapper/WrappersStyles.js","components/ActionsList/ActionsListStyles.js","components/ActionsList/ActionsList.js","components/Country/CountryStyles.js","components/Country/Country.js","components/CountryList/CountryListStyles.js","services/getFlags.js","components/Skeletons/SkeletonElement/SkeletonElementStyles.js","components/Skeletons/SkeletonElement/SkeletonElement.js","components/Skeletons/SkeletonCountry/SkeletonCountryStyles.js","components/Skeletons/SkeletonCountry/SkeletonCountry.js","components/CountryList/CountryList.js","pages/Home.js","components/ButtonBack/ButtonBackStyles.js","components/ButtonBack/ButtonBack.js","components/Skeletons/SkeletonCountrySelected/SkeletonCountrySelectedStyles.js","components/Skeletons/SkeletonCountrySelected/SkeletonCountrySelected.js","components/CountrySelected/CountrySelectedStyles.js","components/CountrySelected/CountrySelected.js","services/getFlagDetail.js","pages/Detail.js","components/Header/HeaderStyles.js","components/Header/Header.js","App.js","index.js"],"names":["types","initialState","countryList","countryByName","countryByRegion","GlobalStyles","createGlobalStyle","breakpoints","FilterSelectStyles","styled","div","FilterSelect","useState","value","setValue","dropdown","setdropdown","dispatch","useDispatch","handleRegionChange","e","target","innerText","type","payload","className","onClick","SearchBarStyles","label","SearchBar","values","setValues","autoComplete","name","placeholder","onChange","WrapperStyles","ActionsListStyles","section","ActionsList","CountryStyled","Link","Country","countries","map","common","png","population","region","capitalRef","cca3","to","loading","src","alt","CountryListStyled","fromApiResponse","countryData","Array","isArray","flags","capital","undefined","SkeletonElementStyles","SkeletonElement","classes","SkeletonCountryStyles","SkeletonCountry","CountryList","loaded","setLoaded","showLimit","setShowLimit","useSelector","state","countriesListFiltered","filter","country","countryName","toLowerCase","countryContinent","countryNameFilter","countryRegionFilter","includes","useEffect","fetch","then","resp","json","catch","console","log","data","err","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","length","slice","n","Home","ButtonBackStyles","button","ButtonBack","history","useHistory","goBack","SkeletonCountrySelectedStyles","SkeletonCountrySelected","CountrySelectedStyles","CountrySelected","common2","subregion","tldRef","nameCurrencies","langs","borders","lang","border","tld","currencies","languages","nativeName","Object","Detail","match","code","params","detail","setDetail","URL","getFlagDetail","HeaderStyles","header","Header","setDarkMode","darkMode","process","style","textDecoration","color","store","createStore","action","App","JSON","parse","localStorage","getItem","setItem","stringify","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6147462d.chunk.js","sourcesContent":["export const types = {\r\n  setCountryList: '[Country] Set Country List',\r\n  getCountryByName: '[Country] Get Country By Name',\r\n  getCountryByRegion: '[Country] Get Country By Region ',\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  countryList: [],\r\n  countryByName: '',\r\n  countryByRegion: '',\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.setCountryList:\r\n      return {\r\n        ...state,\r\n        countryList: action.payload,\r\n      };\r\n\r\n    case types.getCountryByName:\r\n      return {\r\n        ...state,\r\n        countryByName: action.payload,\r\n      };\r\n\r\n    case types.getCountryByRegion:\r\n      return {\r\n        ...state,\r\n        countryByRegion: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n   :root{\r\n      --very-light-gray: rgba(250, 250, 250);\r\n      --black: #111517;\r\n      --white: #ffffff;\r\n      \r\n      --bg-loader: rgb(255, 255, 255);\r\n      --content-loader: rgb(226, 226, 226);\r\n\r\n      --bg-shimmer: rgba(255, 255, 255, 0.15);\r\n      --shadow-loader: 0 0 30px 30px rgba(255, 255, 255, 0.05);\r\n   }\r\n   *, *::after, *::before{\r\n      box-sizing: border-box;\r\n   }\r\n   body{\r\n      margin: 0;\r\n      padding: 0;\r\n      font-family: 'Nunito Sans', sans-serif;\r\n   }\r\n   html {\r\n      box-sizing: border-box;\r\n      font-size: 62.5%;\r\n   }\r\n   main{\r\n      background-color: var(--very-light-gray);\r\n      color: var(--black);\r\n      min-height: 100vh;\r\n   }\r\n\r\n   img {\r\n      max-width: 100%;\r\n   }\r\n   h1, h2, h3{\r\n      margin: 0;\r\n      padding: 0;\r\n   }\r\n   h1{\r\n      font-size: 2rem;\r\n   }\r\n   h2{\r\n      font-size: 1.6rem;\r\n   }\r\n   h3{\r\n      font-size: 1.6rem;\r\n   }\r\n   p{\r\n      margin: 0;\r\n      padding: 0;\r\n      font-size: 1.4rem;\r\n   }\r\n   .error {\r\n    display: block;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    p{\r\n       font-size: 3.5rem;\r\n    }\r\n  }\r\n   .is-dark-mode {\r\n      --very-light-gray: #202D36;\r\n      --black: #ffffff;\r\n      --white: rgb(43, 57, 69);\r\n\r\n      --bg-loader: rgb(43, 57, 69);\r\n      --content-loader: rgb(80, 80, 104, 0.3);\r\n\r\n      --bg-shimmer: rgba(16, 15, 17, 0.02);\r\n      --shadow-loader: 0 0 30px 30px rgba(43, 41, 41, 0.1);\r\n   }\r\n\r\n   .is-light-mode {\r\n      --very-light-gray: rgba(250, 250, 250);\r\n      --black: #111517;\r\n      --white: #ffffff; \r\n\r\n      --bg-loader: rgb(255, 255, 255);\r\n      --content-loader: rgb(226, 226, 226);\r\n\r\n      --bg-shimmer: rgba(255, 255, 255, 0.15);\r\n      --shadow-loader: 0 0 30px 30px rgba(255, 255, 255, 0.05);\r\n   }\r\n\r\n   @media (prefers-color-scheme: dark) {\r\n      :root {\r\n         --black: #ffffff;\r\n         --white: rgb(43, 57, 69);\r\n         --very-light-gray: #202D36;\r\n\r\n         --bg-loader: rgb(43, 57, 69);\r\n         --content-loader: rgb(80, 80, 104, 0.3);\r\n\r\n         --bg-shimmer: rgba(16, 15, 17, 0.02);\r\n         --shadow-loader: 0 0 30px 30px rgba(43, 41, 41, 0.1);\r\n      }\r\n   }\r\n`;\r\n","export const breakpoints = {\r\n  desktop: '@media screen and (min-width: 1024px)',\r\n  tablet: '@media screen and (min-width: 768px)',\r\n  phone: '@media screen and (min-width: 500px)',\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../styles/MediaQueries';\r\n\r\nexport const FilterSelectStyles = styled.div`\r\n  &.dropdown {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 1.4rem;\r\n    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.04);\r\n    width: 60%;\r\n    padding: 1.45rem 1.8rem;\r\n    margin: 2rem 1.6rem;\r\n    position: relative;\r\n    background: var(--white);\r\n    text-align: left;\r\n    border-radius: 0.8rem;\r\n    cursor: pointer;\r\n  }\r\n  ${breakpoints.tablet} {\r\n    &.dropdown {\r\n      margin: 2rem 0;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .fa-chevron-down {\r\n    margin-left: 10px;\r\n  }\r\n  &.dropdown.open ul {\r\n    display: block;\r\n  }\r\n  &.dropdown ul li {\r\n    margin: 1rem 0;\r\n    margin-left: -2rem;\r\n  }\r\n  &.dropdown ul {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    display: none;\r\n    background: var(--white);\r\n    border-radius: 0.8rem;\r\n    width: 100%;\r\n    list-style-type: none;\r\n    text-align: left;\r\n    z-index: 99;\r\n    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.04);\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { types } from '../../types/types';\r\nimport { FilterSelectStyles } from './FilterSelectStyles';\r\n\r\nexport const FilterSelect = () => {\r\n  const [value, setValue] = useState('');\r\n  const [dropdown, setdropdown] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRegionChange = (e) => {\r\n    setValue(e.target.innerText);\r\n    dispatch({ type: types.getCountryByRegion, payload: e.target.innerText });\r\n  };\r\n  return (\r\n    <FilterSelectStyles\r\n      className={`${dropdown ? 'dropdown open' : 'dropdown'}`}\r\n      onClick={() => setdropdown(!dropdown)}\r\n    >\r\n      {value ? value : 'Filter by Region'}\r\n      <i className=\"fas fa-chevron-down\"></i>\r\n      <ul>\r\n        <li onClick={handleRegionChange}>All</li>\r\n        <li onClick={handleRegionChange}>Africa</li>\r\n        <li onClick={handleRegionChange}>Americas</li>\r\n        <li onClick={handleRegionChange}>Asia</li>\r\n        <li onClick={handleRegionChange}>Europe</li>\r\n        <li onClick={handleRegionChange}>Oceania</li>\r\n      </ul>\r\n    </FilterSelectStyles>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../styles/MediaQueries';\r\n\r\nexport const SearchBarStyles = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.6rem;\r\n  padding: 0 2rem;\r\n  margin: 2rem 1.5rem;\r\n  height: 5rem;\r\n  background: var(--white);\r\n  color: var(--black);\r\n  border-radius: 0.8rem;\r\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.04);\r\n\r\n  ${breakpoints.tablet} {\r\n    margin: 2rem 0;\r\n  }\r\n\r\n  i {\r\n    color: #c4c4c4;\r\n    margin-right: 2rem;\r\n  }\r\n  .form-input {\r\n    height: 4.8rem;\r\n    line-height: 4.8rem;\r\n    flex: 1;\r\n    outline: none;\r\n    border: none;\r\n    background: var(--white);\r\n    color: var(--black);\r\n    &::-webkit-input-placeholder {\r\n      font-size: 1.4rem;\r\n      color: #c4c4c4;\r\n    }\r\n  }\r\n  .close {\r\n    border: 1px solid red;\r\n    border-radius: 50%;\r\n    border: none;\r\n    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.04);\r\n    background: transparent;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { types } from '../../types/types';\r\n\r\nimport { SearchBarStyles } from './SearchBarStyles';\r\n\r\nexport const SearchBar = () => {\r\n  const [values, setValues] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (e) => {\r\n    setValues(e.target.value);\r\n    dispatch({\r\n      type: types.getCountryByName,\r\n      payload: e.target.value,\r\n    });\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setValues('');\r\n    dispatch({\r\n      type: types.getCountryByName,\r\n      payload: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SearchBarStyles>\r\n      <i className=\"fas fa-search\"></i>\r\n      <input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        name=\"values\"\r\n        className=\"form-input\"\r\n        value={values}\r\n        placeholder=\"Search for a country...\"\r\n        onChange={handleInputChange}\r\n      />\r\n      {values && (\r\n        <button className=\"close\" onClick={clearInput}>\r\n          ✖️\r\n        </button>\r\n      )}\r\n    </SearchBarStyles>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../styles/MediaQueries';\r\n\r\nexport const WrapperStyles = styled.div`\r\n  max-width: 1328px;\r\n  padding: 0 2rem;\r\n  margin: auto;\r\n  ${breakpoints.phone} {\r\n    padding: 0 4rem;\r\n  }\r\n  ${breakpoints.tablet} {\r\n    padding: 0 5rem;\r\n  }\r\n  ${breakpoints.desktop} {\r\n    padding: 0 6rem;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../styles/MediaQueries';\r\n\r\nexport const ActionsListStyles = styled.section`\r\n  margin: 2rem 0 1rem;\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  ${breakpoints.tablet} {\r\n    .grid {\r\n      grid-template-columns: 300px 200px;\r\n    }\r\n  }\r\n  ${breakpoints.desktop} {\r\n    .grid {\r\n      grid-template-columns: 440px 200px;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { FilterSelect } from '../FilterSelect/FilterSelect';\r\nimport { SearchBar } from '../SearchBar/SearchBar';\r\nimport { WrapperStyles } from '../Wrapper/WrappersStyles';\r\n\r\nimport { ActionsListStyles } from './ActionsListStyles';\r\n\r\nexport const ActionsList = () => {\r\n  return (\r\n    <ActionsListStyles>\r\n      <WrapperStyles>\r\n        <div className=\"grid\">\r\n          <SearchBar />\r\n          <FilterSelect />\r\n        </div>\r\n      </WrapperStyles>\r\n    </ActionsListStyles>\r\n  );\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const CountryStyled = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n  border-radius: 0.8rem;\r\n  overflow: hidden;\r\n  background: var(--white);\r\n  color: var(--black);\r\n  text-decoration: none;\r\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.04);\r\n  cursor: pointer;\r\n  &:hover {\r\n    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.2);\r\n  }\r\n  .card-country-image {\r\n    height: 16rem;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n  h2 {\r\n    padding: 2.8rem 2.4rem 1rem;\r\n    font-weight: 800;\r\n  }\r\n  .details {\r\n    padding: 0 2.4rem;\r\n    margin-bottom: 4rem;\r\n    p {\r\n      padding: 0.5rem 0;\r\n      strong {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { CountryStyled } from './CountryStyles.js';\r\n\r\nexport const Country = ({ countries }) => {\r\n  return (\r\n    <>\r\n      {countries.map(\r\n        ({ common, png, population, region, capitalRef, cca3 }) => (\r\n          <CountryStyled to={`/country/${cca3}`} key={cca3}>\r\n            <div className=\"card-country-image\">\r\n              <img loading=\"lazy\" src={png} alt={common} />\r\n            </div>\r\n\r\n            <div className=\"card-country-description\">\r\n              <h2>{common}</h2>\r\n              <div className=\"details\">\r\n                <p>\r\n                  <strong>Population:</strong> {population}\r\n                </p>\r\n                <p>\r\n                  <strong>Region:</strong> {region}\r\n                </p>\r\n                <p>\r\n                  <strong>Capital:</strong> {capitalRef}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </CountryStyled>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const CountryListStyled = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 28rem);\r\n  grid-auto-flow: columns;\r\n  gap: 2.5rem 3rem;\r\n  justify-content: center;\r\n  padding: 1rem 1.5rem 4rem;\r\n`;\r\n","const fromApiResponse = (countryData) => {\r\n  if (Array.isArray(countryData)) {\r\n    const countryList = countryData.map(\r\n      ({\r\n        flags: { png },\r\n        name: { common },\r\n        population,\r\n        region,\r\n        capital,\r\n        cca3,\r\n      }) => {\r\n        const capitalRef = capital === undefined ? 'Desconocido' : capital[0];\r\n        return { png, common, population, region, capitalRef, cca3 };\r\n      }\r\n    );\r\n    return countryList;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const getFlags = () => {\r\n  const URL = 'https://restcountries.com/v3.1/all';\r\n  return fetch(URL)\r\n    .then((resp) => resp.json())\r\n    .then(fromApiResponse)\r\n    .catch((e) => console.log(e));\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../styles/MediaQueries';\r\n\r\nexport const SkeletonElementStyles = styled.div`\r\n  background: var(--content-loader);\r\n  border-radius: 4px;\r\n  &.text {\r\n    position: relative;\r\n    width: 80%;\r\n    height: 1.5rem;\r\n    margin: 1.5rem 2.3rem;\r\n    overflow: hidden;\r\n\r\n    &.selected {\r\n      width: 50%;\r\n      margin: 1.5rem 0;\r\n      &:nth-child(2n + 1) {\r\n        width: 40%;\r\n      }\r\n      ${breakpoints.desktop} {\r\n        width: 80%;\r\n        &:nth-child(2n + 1) {\r\n          width: 60%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &.title {\r\n    position: relative;\r\n    width: 50%;\r\n    height: 20px;\r\n    margin: 2.8rem 0 2rem;\r\n    margin-left: 2.3rem;\r\n    overflow: hidden;\r\n    &.selected {\r\n      width: 60%;\r\n      margin: 2.8rem 0 2rem;\r\n      ${breakpoints.desktop} {\r\n        width: 60%;\r\n      }\r\n    }\r\n  }\r\n  &.subtitle {\r\n    position: relative;\r\n    overflow: hidden;\r\n    margin: 2.2rem 0 2rem;\r\n    width: 30%;\r\n    height: 2rem;\r\n  }\r\n  &.thumbnail {\r\n    position: relative;\r\n    overflow: hidden;\r\n    width: 28rem;\r\n    height: 16rem;\r\n  }\r\n  &.avatar {\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n  }\r\n  &.thumbnail-grande {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  &.btn {\r\n    width: 7rem;\r\n    height: 2rem;\r\n    margin-right: 1.5rem;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  /* Loader */\r\n  .loaderSwipeStyles {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    animation: loaderSwipeAnim 0.9s cubic-bezier(0.4, 0, 0.2, 1) infinite;\r\n    background: linear-gradient(\r\n      to right,\r\n      var(--bg-shimmer) 10%,\r\n      rgba(255, 255, 255, 0.05) 50%,\r\n      var(--bg-shimmer) 90%\r\n    );\r\n  }\r\n  @keyframes loaderSwipeAnim {\r\n    0% {\r\n      left: -100%;\r\n    }\r\n    100% {\r\n      left: 100%;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n// import './Skeleton.css';\r\nimport { SkeletonElementStyles } from './SkeletonElementStyles';\r\n\r\nexport const SkeletonElement = ({ type }) => {\r\n  const classes = `skeleton ${type}`;\r\n  return (\r\n    <SkeletonElementStyles className={classes}>\r\n      <div className=\"loaderSwipeStyles\"></div>\r\n    </SkeletonElementStyles>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const SkeletonCountryStyles = styled.div`\r\n  margin: 0 auto;\r\n  border-radius: 5px;\r\n  z-index: 0;\r\n  width: 27.5rem;\r\n  height: 34.7rem;\r\n  overflow: hidden;\r\n  background: var(--bg-loader);\r\n`;\r\n","import React from 'react';\r\nimport { SkeletonElement } from '../SkeletonElement/SkeletonElement';\r\nimport { SkeletonCountryStyles } from './SkeletonCountryStyles';\r\n\r\nexport const SkeletonCountry = () => {\r\n  return (\r\n    <SkeletonCountryStyles>\r\n      <div className=\"skeleton-country\">\r\n        <SkeletonElement type=\"thumbnail\" />\r\n        <SkeletonElement type=\"title\" />\r\n        <SkeletonElement type=\"text\" />\r\n        <SkeletonElement type=\"text\" />\r\n        <SkeletonElement type=\"text\" />\r\n      </div>\r\n    </SkeletonCountryStyles>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Country } from '../Country/Country';\r\nimport { CountryListStyled } from './CountryListStyles';\r\n\r\nimport { types } from '../../types/types';\r\nimport { getFlags } from '../../services/getFlags';\r\nimport { SkeletonCountry } from '../Skeletons/SkeletonCountry/SkeletonCountry';\r\n\r\nexport const CountryList = () => {\r\n  const dispatch = useDispatch();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [showLimit, setShowLimit] = useState(20);\r\n\r\n  const countryList = useSelector((state) => state.countryList);\r\n  const countryByName = useSelector((state) => state.countryByName);\r\n  const countryByRegion = useSelector((state) => state.countryByRegion);\r\n\r\n  let countriesListFiltered = countryList;\r\n\r\n  countriesListFiltered = countriesListFiltered.filter((country) => {\r\n    const countryName = country.common.toLowerCase();\r\n    const countryContinent = country.region.toLowerCase();\r\n\r\n    const countryNameFilter = countryByName.toLowerCase();\r\n    const countryRegionFilter = countryByRegion.toLowerCase();\r\n\r\n    if (countryRegionFilter.includes('all')) {\r\n      return country;\r\n    } else {\r\n      return (\r\n        countryName.includes(countryNameFilter) &&\r\n        countryContinent.includes(countryRegionFilter)\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLoaded(false);\r\n    getFlags()\r\n      .then((data) => {\r\n        dispatch({\r\n          type: types.setCountryList,\r\n          payload: data,\r\n        });\r\n        setLoaded(true);\r\n      })\r\n      .catch((err) => err);\r\n  }, [dispatch]);\r\n\r\n  window.onscroll = () => {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop ===\r\n      document.documentElement.offsetHeight\r\n    ) {\r\n      setShowLimit(showLimit + showLimit);\r\n    }\r\n  };\r\n\r\n  if (loaded && countriesListFiltered.length === 0) {\r\n    return (\r\n      <div className=\"error\">\r\n        <p>\r\n          No se encontraron resultados <span>☹️</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <CountryListStyled>\r\n      {loaded && (\r\n        <Country countries={countriesListFiltered.slice(0, showLimit)} />\r\n      )}\r\n\r\n      {!loaded &&\r\n        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((n) => (\r\n          <SkeletonCountry key={n} />\r\n        ))}\r\n    </CountryListStyled>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ActionsList } from '../components/ActionsList/ActionsList';\r\nimport { CountryList } from '../components/CountryList/CountryList';\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <>\r\n      <ActionsList />\r\n      <CountryList />\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonBackStyles = styled.button`\r\n  border: none;\r\n  background: var(--white);\r\n  color: var(--black);\r\n  font-weight: 300;\r\n  font-size: 1.2rem;\r\n  padding: 1.2rem 3rem;\r\n  margin: 5rem 0;\r\n  border-radius: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  box-shadow: 0px 0px 8px 5px rgba(0, 0, 0, 0.04);\r\n  i {\r\n    margin-right: 1rem;\r\n    font-size: 1.8rem;\r\n  }\r\n  p {\r\n    font-weight: 300;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { types } from '../../types/types';\r\nimport { ButtonBackStyles } from './ButtonBackStyles';\r\n\r\nexport const ButtonBack = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n    dispatch({\r\n      type: types.getCountryByName,\r\n      payload: '',\r\n    });\r\n    dispatch({\r\n      type: types.getCountryByRegion,\r\n      payload: '',\r\n    });\r\n  };\r\n  return (\r\n    <ButtonBackStyles onClick={handleBack}>\r\n      <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n      <p>Back</p>\r\n    </ButtonBackStyles>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../styles/MediaQueries';\r\n\r\nexport const SkeletonCountrySelectedStyles = styled.div`\r\n  grid-template-columns: 1fr;\r\n  overflow: hidden;\r\n  padding-bottom: 5rem;\r\n\r\n  ${breakpoints.desktop} {\r\n    display: grid;\r\n    width: 100%;\r\n    height: 100%;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: 7.5rem;\r\n  }\r\n\r\n  .skeleton-country-image {\r\n    width: 100%;\r\n    height: 60vw;\r\n    ${breakpoints.desktop} {\r\n      height: 340px;\r\n    }\r\n  }\r\n\r\n  .skeleton-country-details {\r\n    width: 100%;\r\n    height: 100%;\r\n    .grid {\r\n      display: grid;\r\n      grid-template-columns: 1fr;\r\n      ${breakpoints.desktop} {\r\n        grid-template-columns: 1fr 1fr;\r\n      }\r\n    }\r\n  }\r\n  .skeleton-country-borders {\r\n    display: flex;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { SkeletonElement } from '../SkeletonElement/SkeletonElement';\r\nimport { SkeletonCountrySelectedStyles } from './SkeletonCountrySelectedStyles';\r\n// import { SkeletonElement } from './SkeletonElement';\r\n\r\nexport const SkeletonCountrySelected = () => {\r\n  return (\r\n    <SkeletonCountrySelectedStyles>\r\n      <div className=\"skeleton-country-image\">\r\n        <SkeletonElement type=\"thumbnail-grande\" />\r\n      </div>\r\n      <div className=\"skeleton-country-details\">\r\n        <SkeletonElement type=\"title selected\" />\r\n        <div className=\"grid\">\r\n          <div>\r\n            <SkeletonElement type=\"text selected\" />\r\n            <SkeletonElement type=\"text selected\" />\r\n            <SkeletonElement type=\"text selected\" />\r\n            <SkeletonElement type=\"text selected\" />\r\n            <SkeletonElement type=\"text selected\" />\r\n          </div>\r\n          <div>\r\n            <SkeletonElement type=\"text selected\" />\r\n            <SkeletonElement type=\"text selected \" />\r\n            <SkeletonElement type=\"text selected\" />\r\n          </div>\r\n        </div>\r\n        <SkeletonElement type=\"subtitle selected\" />\r\n        <div className=\"skeleton-country-borders\">\r\n          <SkeletonElement type=\"btn\" />\r\n          <SkeletonElement type=\"btn\" />\r\n          <SkeletonElement type=\"btn\" />\r\n        </div>\r\n      </div>\r\n    </SkeletonCountrySelectedStyles>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../styles/MediaQueries';\r\n\r\nexport const CountrySelectedStyles = styled.div`\r\n  padding-bottom: 5rem;\r\n  .country-img {\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  .country-title {\r\n    margin: 3.5rem 0 2rem;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    grid-row-gap: 3rem;\r\n    p {\r\n      margin: 1rem 0;\r\n      strong {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n  }\r\n  .borders {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin: 3rem 0 0;\r\n    font-weight: 600;\r\n  }\r\n  .border-items {\r\n    margin-top: 2rem;\r\n    .border-item {\r\n      display: inline-flex;\r\n      background: var(--white);\r\n      color: var(--black);\r\n      padding: 0.3rem 2rem;\r\n      margin-right: 1rem;\r\n      margin-bottom: 1rem;\r\n      border-radius: 0.2rem;\r\n      box-shadow: 0px 0px 8px 2px rgba(0, 0, 0, 0.05);\r\n      &:first-child {\r\n        margin-left: 0rem;\r\n      }\r\n    }\r\n  }\r\n  .languages {\r\n    span {\r\n      &::after {\r\n        content: ', ';\r\n      }\r\n      &:last-child {\r\n        &::after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${breakpoints.desktop} {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 10rem;\r\n    align-items: center;\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    .country-title {\r\n      margin: 0rem 0 2rem;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { SkeletonCountrySelected } from '../Skeletons/SkeletonCountrySelected/SkeletonCountrySelected';\r\nimport { CountrySelectedStyles } from './CountrySelectedStyles';\r\n\r\nexport const CountrySelected = ({\r\n  png,\r\n  common,\r\n  population,\r\n  region,\r\n  capitalRef,\r\n  common2,\r\n  subregion,\r\n  tldRef,\r\n  nameCurrencies,\r\n  langs,\r\n  borders,\r\n  loaded,\r\n}) => {\r\n  return (\r\n    <>\r\n      {!loaded ? (\r\n        <SkeletonCountrySelected />\r\n      ) : (\r\n        <CountrySelectedStyles>\r\n          <div className=\"country-img\">\r\n            <img loading=\"lazy\" src={png} alt={common} />\r\n          </div>\r\n\r\n          <div>\r\n            <h1 className=\"country-title\">{common}</h1>\r\n\r\n            <div className=\"grid\">\r\n              <div>\r\n                <p>\r\n                  <strong>Native Name: </strong>\r\n                  {common2 && common2}\r\n                </p>\r\n                <p>\r\n                  <strong>Population: </strong>\r\n                  {population}\r\n                </p>\r\n                <p>\r\n                  <strong>Region: </strong>\r\n                  {region}\r\n                </p>\r\n                <p>\r\n                  <strong>Sub Region: </strong>\r\n                  {subregion && subregion}\r\n                </p>\r\n                <p>\r\n                  <strong>Capital: </strong>\r\n                  {capitalRef && capitalRef}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p>\r\n                  <strong>Top Level Domain: </strong>\r\n                  {tldRef && tldRef}\r\n                </p>\r\n                <p>\r\n                  <strong>Currencies: </strong>\r\n                  {nameCurrencies && nameCurrencies}\r\n                </p>\r\n                <p className=\"languages\">\r\n                  <strong>Languages: </strong>\r\n                  {langs\r\n                    ? langs.map((lang) => <span key={lang}>{lang}</span>)\r\n                    : 'Not Found'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <h3 className=\"borders\">Border Countries:</h3>\r\n            <p className=\"border-items\">\r\n              {borders\r\n                ? borders.map((border) => (\r\n                    <span className=\"border-item\" key={border}>\r\n                      {border}\r\n                    </span>\r\n                  ))\r\n                : 'Not Found'}\r\n            </p>\r\n          </div>\r\n        </CountrySelectedStyles>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","const fromApiResponse = (countryData) => {\r\n  if (Array.isArray(countryData)) {\r\n    const countryList = countryData.map((country) => {\r\n      const {\r\n        flags: { png },\r\n        name,\r\n        population,\r\n        region,\r\n        capital,\r\n        subregion,\r\n        tld,\r\n        currencies,\r\n        languages,\r\n        borders,\r\n      } = country;\r\n      const capitalRef = capital === undefined ? 'Desconocido' : capital[0];\r\n\r\n      const { common, nativeName } = name;\r\n\r\n      const { common: common2 } = Object.values(nativeName)[0];\r\n\r\n      const tldRef = tld[0];\r\n\r\n      let nameCurrencies;\r\n      if (currencies) {\r\n        nameCurrencies = Object.values(currencies)[0].name;\r\n      } else {\r\n        nameCurrencies = 'Desconocido';\r\n      }\r\n\r\n      const langs = Object.values(languages);\r\n\r\n      return {\r\n        png,\r\n        common,\r\n        population,\r\n        region,\r\n        capitalRef,\r\n        common2,\r\n        subregion,\r\n        tldRef,\r\n        langs,\r\n        nameCurrencies,\r\n        borders,\r\n      };\r\n    });\r\n    return countryList;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const getFlagDetail = (code) => {\r\n  const URL = `https://restcountries.com/v3.1/alpha/${code}`;\r\n  return fetch(URL)\r\n    .then((resp) => resp.json())\r\n    .then(fromApiResponse)\r\n    .catch((e) => console.log(e));\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ButtonBack } from '../components/ButtonBack/ButtonBack';\r\nimport { CountrySelected } from '../components/CountrySelected/CountrySelected';\r\nimport { WrapperStyles } from '../components/Wrapper/WrappersStyles';\r\nimport { getFlagDetail } from '../services/getFlagDetail';\r\n\r\nexport const Detail = ({ match }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const code = match.params.code;\r\n\r\n  const [detail, setDetail] = useState({\r\n    png: '',\r\n    common: '',\r\n    population: '',\r\n    region: '',\r\n    capitalRef: '',\r\n    common2: '',\r\n    subregion: '',\r\n    tldRef: '',\r\n    nameCurrencies: '',\r\n    langs: [],\r\n    borders: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLoaded(false);\r\n    getFlagDetail(`${code}`).then((data) => {\r\n      setDetail(data[0]);\r\n      setLoaded(true);\r\n    });\r\n\r\n    return () => setDetail('');\r\n  }, [setDetail, code]);\r\n\r\n  return (\r\n    <>\r\n      <WrapperStyles>\r\n        <ButtonBack />\r\n        <CountrySelected {...detail} loaded={loaded} setLoaded={setLoaded} />\r\n      </WrapperStyles>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderStyles = styled.header`\r\n  position: sticky;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 10;\r\n  background: var(--white);\r\n  color: var(--black);\r\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.04);\r\n  .content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 6rem;\r\n  }\r\n  .header-dark-mode {\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    i {\r\n      font-size: 1.6rem;\r\n      transform: rotate(-32deg);\r\n    }\r\n    p {\r\n      margin-left: 1rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { WrapperStyles } from '../Wrapper/WrappersStyles';\r\nimport { HeaderStyles } from './HeaderStyles';\r\n\r\nexport const Header = ({ setDarkMode, darkMode }) => {\r\n  const handleClick = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <HeaderStyles>\r\n      <WrapperStyles>\r\n        <div className=\"content\">\r\n          <Link\r\n            to={`${process.env.PUBLIC_URL}`}\r\n            style={{ textDecoration: 'none', color: 'var(--black)' }}\r\n          >\r\n            <h1 className=\"content-title\">Where in the world?</h1>\r\n          </Link>\r\n\r\n          <div className=\"header-dark-mode\" onClick={handleClick}>\r\n            {darkMode ? (\r\n              <i className=\"fas fa-moon\"></i>\r\n            ) : (\r\n              <i className=\"far fa-moon\"></i>\r\n            )}\r\n            <p>Dark Mode</p>\r\n          </div>\r\n        </div>\r\n      </WrapperStyles>\r\n    </HeaderStyles>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\n\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reducer } from './redux/reducer';\n\nimport { GlobalStyles } from './styles/GlobalStyles';\n\nimport { Home } from './pages/Home';\nimport { Detail } from './pages/Detail';\nimport { Header } from './components/Header/Header';\n\nconst store = createStore(reducer);\n\nexport const App = () => {\n  const getTheme = () => {\n    return JSON.parse(localStorage.getItem('theme')) || false;\n  };\n  const [darkMode, setDarkMode] = useState(getTheme());\n\n  useEffect(() => {\n    localStorage.setItem('theme', JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  return (\n    <main className={darkMode ? 'is-dark-mode' : 'is-light-mode'}>\n      <Provider store={store}>\n        <Router>\n          <GlobalStyles />\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/country/:code\" component={Detail} />\n        </Router>\n      </Provider>\n    </main>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}